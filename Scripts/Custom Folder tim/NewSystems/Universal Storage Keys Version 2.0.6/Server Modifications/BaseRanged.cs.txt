File: Scripts\Items\Weapons\Ranged\BaseRanged.cs

/*---------------------------------------------------- BaseStoreKey Ammo -----------------------------------
This block allows the ranged weapon system to check and withdraw ammo from any BaseStoreKey or MasterKey objects found within the
archer's backpack.  

Location: This block belongs in BaseRanged.cs under Scripts\Items\Weapons\Ranged\. This block needs to be inserted in the OnFired() 
event callback method.

On an unmodified server, this is found on or around line 102 of BaseRanged.cs

Installation: drop this block in place, being mindful of the structure around it.
*/

[SEARCH FOR]

		public virtual bool OnFired(Mobile attacker, Mobile defender)
		{
			if (attacker.Player)
			{
				BaseQuiver quiver = attacker.FindItemOnLayer(Layer.Cloak) as BaseQuiver;
				Container pack = attacker.Backpack;

				if (quiver == null || Utility.Random(100) >= quiver.LowerAmmoCost)
				{
					// consume ammo
					if (quiver != null && quiver.ConsumeTotal(AmmoType, 1))
					{
						quiver.InvalidateWeight();
					}
					else if (pack == null || !pack.ConsumeTotal(AmmoType, 1))
					{
						return false;
					}
				}
				else if (quiver.FindItemByType(AmmoType) == null && (pack == null || pack.FindItemByType(AmmoType) == null))
				{
					// lower ammo cost should not work when we have no ammo at all
					return false;
				}
			}

			attacker.MovingEffect(defender, EffectID, 18, 1, false, false);

			return true;
		}

[REPLACE WITH]

		public virtual bool OnFired(Mobile attacker, Mobile defender)
		{
			if (attacker.Player)
			{
				BaseQuiver quiver = attacker.FindItemOnLayer(Layer.Cloak) as BaseQuiver;
				Container pack = attacker.Backpack;

				if (quiver == null || Utility.Random(100) >= quiver.LowerAmmoCost)
				{
					// consume ammo
					if (quiver != null && quiver.ConsumeTotal(AmmoType, 1))
					{
						quiver.InvalidateWeight();
					}
					else if (pack == null || !pack.ConsumeTotal(AmmoType, 1)/* UNIVERSAL STORAGE KEY BEGIN */ && !BaseStoreKey.Consume(pack, AmmoType, 1)/* UNIVERSAL STORAGE KEY END */)
					{
						return false;
					}
				}
				else if (quiver.FindItemByType(AmmoType) == null && (pack == null || pack.FindItemByType(AmmoType) == null))
				{
					// lower ammo cost should not work when we have no ammo at all
					return false;
				}
			}

			attacker.MovingEffect(defender, EffectID, 18, 1, false, false);

			return true;
		}