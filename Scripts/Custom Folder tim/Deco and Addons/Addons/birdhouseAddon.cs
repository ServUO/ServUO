/////////////////////////////////////////////////
//                                             //
// Automatically generated by the              //
// AddonGenerator script by Arya               //
//                                             //
/////////////////////////////////////////////////
using System;
using Server;
using Server.Items;

namespace Server.Items
{
	public class birdhouseAddon : BaseAddon
	{
		public override BaseAddonDeed Deed
		{
			get
			{
				return new birdhouseAddonDeed();
			}
		}

		[ Constructable ]
		public birdhouseAddon()
		{
			AddonComponent ac;
			ac = new AddonComponent( 8928 );
			AddComponent( ac, 1, 0, 20 );
			ac = new AddonComponent( 2592 );
			AddComponent( ac, 1, 0, 0 );
			ac = new AddonComponent( 3342 );
			AddComponent( ac, 2, 0, 0 );
			ac = new AddonComponent( 3346 );
			AddComponent( ac, 0, 2, 0 );
			ac = new AddonComponent( 3348 );
			AddComponent( ac, 0, -1, 0 );
			ac = new AddonComponent( 7049 );
			AddComponent( ac, 1, 0, 0 );
			ac = new AddonComponent( 7052 );
			AddComponent( ac, 1, 1, 0 );
			ac = new AddonComponent( 7052 );
			AddComponent( ac, 2, 1, 0 );
			ac = new AddonComponent( 3244 );
			AddComponent( ac, 1, 0, 0 );
			ac = new AddonComponent( 3245 );
			AddComponent( ac, 0, 1, 0 );
			ac = new AddonComponent( 3254 );
			AddComponent( ac, 2, 1, 0 );
			ac = new AddonComponent( 3288 );
			AddComponent( ac, -1, 0, 0 );
			ac = new AddonComponent( 3289 );
			AddComponent( ac, -1, 0, 0 );
			ac = new AddonComponent( 3288 );
			AddComponent( ac, 1, -2, 0 );
			ac = new AddonComponent( 3289 );
			AddComponent( ac, 1, -2, 0 );
			ac = new AddonComponent( 6868 );
			AddComponent( ac, -1, -2, 12 );
			ac = new AddonComponent( 8430 );
			ac.Hue = 2066;
			AddComponent( ac, 1, 2, 11 );
			ac = new AddonComponent( 8474 );
			ac.Hue = 2440;
			AddComponent( ac, 2, -1, 0 );
			ac = new AddonComponent( 3288 );
			AddComponent( ac, -1, -2, 0 );
			ac = new AddonComponent( 3289 );
			AddComponent( ac, -1, -2, 0 );

		}

		public birdhouseAddon( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class birdhouseAddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new birdhouseAddon();
			}
		}

		[Constructable]
		public birdhouseAddonDeed()
		{
			Name = "birdhouse";
		}

		public birdhouseAddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void	Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}